{% extends 'layout.njk' %}

{% from 'govuk/components/error-summary/macro.njk' import govukErrorSummary %}
{% from 'govuk/components/input/macro.njk'         import govukInput %}
{% from 'govuk/components/button/macro.njk'        import govukButton %}
{% from "govuk/components/fieldset/macro.njk"      import govukFieldset %}
{% from 'govuk/components/back-link/macro.njk'     import govukBackLink %}

{% block pageTitle %}
  Address details
{% endblock %}

{% block backLink %}
  {{
    govukBackLink({
      text: 'Back',
      href: backNavigation
    })
  }}
{% endblock %}

{% block content %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
      {{
        govukErrorSummary ({
          titleText: 'There is a problem with the details you gave us',
          errorList: validationResult.errors
        }) if validationResult and validationResult.errors.length > 0
      }}

      <form method="post">
        <fieldset class="govuk-fieldset">
          <legend class="govuk-fieldset__legend govuk-fieldset__legend--l">
            <h1 class="govuk-fieldset__heading">
              What home address would you like to remove?
            </h1>
          </legend>

          <span class="govuk-hint">
            You cannot remove a registered office address from the public register, even if itâ€™s your home address.
          </span>

          {{
            govukInput({
              label: {
                html: 'Building and street <span class="govuk-visually-hidden">line 1 of 2</span>'
              },
              errorMessage: validationResult.getErrorForField('line1') if validationResult,
              id: 'address-line-1',
              name: 'line1',
              value: line1,
              autocomplete: 'address-line1'
            })
          }}
          {{
            govukInput({
              label: {
                html: '<span class="govuk-visually-hidden">Building and street line 2 of 2</span>'
              },
              id: 'address-line-2',
              name: 'line2',
              value: line2,
              autocomplete: 'address-line2'
            })
          }}
          {{
            govukInput({
              label: {
                text: 'Town or city'
              },
              errorMessage: validationResult.getErrorForField('town') if validationResult,
              classes: 'govuk-!-width-two-thirds',
              id: 'address-town',
              name: 'town',
              value: town,
              autocomplete: 'address-level2'
            })
          }}
          {{
            govukInput({
              label: {
                text: 'County'
              },
              errorMessage: validationResult.getErrorForField('county') if validationResult,
              classes: 'govuk-!-width-two-thirds',
              id: 'address-County',
              name: 'county',
              value: county
            })
          }}
          {{
            govukInput({
              label: {
                text: 'Postcode'
              },
              errorMessage: validationResult.getErrorForField('postcode') if validationResult,
              classes: 'govuk-input--width-10',
              id: 'address-postcode',
              name: 'postcode',
              value: postcode,
              autocomplete: 'postal-code'
            })
          }}
          {{
            govukButton({
              text: 'Continue',
              attributes: {
                id: 'submit'
              }
            })
          }}
        </fieldset>
      </form>
    </div>
  </div>

{% endblock %}
